package View;

import Model.PopulationModel;
import Model.PopulationObservable;
import Model.PopulationObserver;
import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLaf;

import java.io.FileWriter;
import java.io.IOException;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * MainPage is the starting point for the program. It takes in information
 * based on the user's selection about each disease and passes it to the 
 * results page. It is composed of informative text boxes, read more options, 
 * 6 diseases to choose from, the ability to view saved user reports and 
 * delete them, and slider options for safeguards. 
 */
public class MainPage extends javax.swing.JFrame {
    /**
     * The resultsPopObserver observes the population model and gets 
     * updated whenever the observable changes.
     */
    PopulationObservable popObservable = new PopulationObservable();
    PopulationObserver resultsPopObserver = new PopulationObserver(); 
    public String selectedDisease = "";
  
    /**
    * This is the constructor for MainPage. It turns off all the backgrounds,
    * and the start button. 
    */
    public MainPage() {
        initComponents();
        setLocationRelativeTo(null);
        /**
         * The following line observes changes made to the 
         * observable (the population model) and updates. 
         */
        popObservable.addObserver(resultsPopObserver);
            TurnOffBackgrounds();
            startButton.setEnabled(false);
            jLabelDefaultBG.setVisible(true);
    }
    
    /**
    * TurnOffBackgrounds turns off all the backgrounds for the diseases until
    * they're set true in another function. 
    */
    public void TurnOffBackgrounds() {
        jLabelBlackDeath.setVisible(false);
        jLabelDelta.setVisible(false);
        jLabelCovid.setVisible(false);
        jLabelInfluenza.setVisible(false);
        jLabelSmallPox.setVisible(false);
        jLabelSpanishFlu.setVisible(false);
        jLabelDefaultBG.setVisible(false);
    }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        startButton = new javax.swing.JButton();
        popSlider = new javax.swing.JSlider();
        popCurrent = new javax.swing.JLabel();
        popLabel = new javax.swing.JLabel();
        infectedSlider = new javax.swing.JSlider();
        infectedCurrent = new javax.swing.JLabel();
        infectLabel = new javax.swing.JLabel();
        timeSlider = new javax.swing.JSlider();
        timeCurrent = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        covidButton = new javax.swing.JRadioButton();
        fluButton = new javax.swing.JRadioButton();
        vaccineLabel = new javax.swing.JLabel();
        vaccineCurrent = new javax.swing.JLabel();
        vaccineSlider = new javax.swing.JSlider();
        quarantineCurrent = new javax.swing.JLabel();
        quarantineLabel = new javax.swing.JLabel();
        quarantineSlider = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        instructions = new javax.swing.JTextArea();
        aboutModelButton = new javax.swing.JButton();
        aboutModelButton1 = new javax.swing.JButton();
        bubonicButton = new javax.swing.JRadioButton();
        deleteHistory = new javax.swing.JButton();
        userHistoryButton = new javax.swing.JButton();
        spanishFluButton = new javax.swing.JRadioButton();
        deltaButton = new javax.swing.JRadioButton();
        smallpoxButton = new javax.swing.JRadioButton();
        mutationCheckBox = new javax.swing.JCheckBox();
        checkboxBG = new javax.swing.JPanel();
        diseaseBG = new javax.swing.JPanel();
        safeguardBG = new javax.swing.JPanel();
        parameterBG = new javax.swing.JPanel();
        jLabelOverlay = new javax.swing.JLabel();
        jLabelDefaultBG = new javax.swing.JLabel();
        jLabelSmallPox = new javax.swing.JLabel();
        jLabelDelta = new javax.swing.JLabel();
        jLabelSpanishFlu = new javax.swing.JLabel();
        jLabelBlackDeath = new javax.swing.JLabel();
        jLabelCovid = new javax.swing.JLabel();
        jLabelInfluenza = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setBounds(new java.awt.Rectangle(0, 25, 1200, 800));
        setForeground(java.awt.Color.darkGray);
        setMinimumSize(new java.awt.Dimension(1100, 800));
        setSize(new java.awt.Dimension(1100, 800));
        getContentPane().setLayout(null);

        startButton.setBackground(getBackground());
        startButton.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        startButton.setForeground(new java.awt.Color(255, 255, 255));
        startButton.setText("Start!");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        getContentPane().add(startButton);
        startButton.setBounds(220, 680, 140, 40);

        popSlider.setBackground(new java.awt.Color(255, 255, 255));
        popSlider.setForeground(new java.awt.Color(255, 255, 255));
        popSlider.setMaximum(1000000);
        popSlider.setMinimum(100000);
        popSlider.setPaintLabels(true);
        popSlider.setToolTipText("");
        popSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                popSliderStateChanged(evt);
            }
        });
        getContentPane().add(popSlider);
        popSlider.setBounds(800, 540, 200, 20);

        popCurrent.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        popCurrent.setForeground(new java.awt.Color(255, 255, 255));
        popCurrent.setLabelFor(popSlider);
        popCurrent.setText("100000");
        popCurrent.setToolTipText("");
        getContentPane().add(popCurrent);
        popCurrent.setBounds(880, 570, 70, 20);

        popLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        popLabel.setForeground(new java.awt.Color(255, 255, 255));
        popLabel.setLabelFor(popSlider);
        popLabel.setText("Population");
        getContentPane().add(popLabel);
        popLabel.setBounds(690, 540, 100, 18);

        infectedSlider.setBackground(new java.awt.Color(255, 255, 255));
        infectedSlider.setForeground(new java.awt.Color(51, 153, 0));
        infectedSlider.setMinimum(1);
        infectedSlider.setPaintLabels(true);
        infectedSlider.setToolTipText("");
        infectedSlider.setValue(1);
        infectedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                infectedSliderStateChanged(evt);
            }
        });
        getContentPane().add(infectedSlider);
        infectedSlider.setBounds(800, 480, 200, 20);

        infectedCurrent.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        infectedCurrent.setForeground(new java.awt.Color(255, 255, 255));
        infectedCurrent.setLabelFor(infectedSlider);
        infectedCurrent.setText("1");
        infectedCurrent.setToolTipText("");
        getContentPane().add(infectedCurrent);
        infectedCurrent.setBounds(890, 510, 50, 24);

        infectLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        infectLabel.setForeground(new java.awt.Color(255, 255, 255));
        infectLabel.setLabelFor(infectedSlider);
        infectLabel.setText("Infected");
        getContentPane().add(infectLabel);
        infectLabel.setBounds(700, 480, 80, 18);

        timeSlider.setBackground(new java.awt.Color(255, 255, 255));
        timeSlider.setForeground(new java.awt.Color(255, 255, 255));
        timeSlider.setMaximum(365);
        timeSlider.setMinimum(100);
        timeSlider.setPaintLabels(true);
        timeSlider.setToolTipText("");
        timeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                timeSliderStateChanged(evt);
            }
        });
        getContentPane().add(timeSlider);
        timeSlider.setBounds(800, 610, 200, 20);

        timeCurrent.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        timeCurrent.setForeground(new java.awt.Color(255, 255, 255));
        timeCurrent.setLabelFor(timeSlider);
        timeCurrent.setText("100");
        timeCurrent.setToolTipText("");
        getContentPane().add(timeCurrent);
        timeCurrent.setBounds(890, 640, 50, 18);

        timeLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(255, 255, 255));
        timeLabel.setLabelFor(timeSlider);
        timeLabel.setText("Timeframe");
        getContentPane().add(timeLabel);
        timeLabel.setBounds(690, 610, 100, 18);

        buttonGroup2.add(covidButton);
        covidButton.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        covidButton.setForeground(new java.awt.Color(255, 255, 255));
        covidButton.setText("Covid-19");
        covidButton.setToolTipText("");
        covidButton.setBorder(null);
        covidButton.setBorderPainted(true);
        covidButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        covidButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                covidButtonActionPerformed(evt);
            }
        });
        getContentPane().add(covidButton);
        covidButton.setBounds(140, 420, 100, 30);

        buttonGroup2.add(fluButton);
        fluButton.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        fluButton.setForeground(new java.awt.Color(255, 255, 255));
        fluButton.setText("Influenza");
        fluButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fluButtonActionPerformed(evt);
            }
        });
        getContentPane().add(fluButton);
        fluButton.setBounds(340, 420, 102, 29);

        vaccineLabel.setBackground(new java.awt.Color(255, 255, 255));
        vaccineLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        vaccineLabel.setForeground(new java.awt.Color(255, 255, 255));
        vaccineLabel.setLabelFor(infectedSlider);
        vaccineLabel.setText("Percent of population that is vaccinated");
        getContentPane().add(vaccineLabel);
        vaccineLabel.setBounds(680, 30, 360, 18);

        vaccineCurrent.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        vaccineCurrent.setForeground(new java.awt.Color(255, 255, 255));
        vaccineCurrent.setLabelFor(vaccineSlider);
        vaccineCurrent.setText("0");
        vaccineCurrent.setToolTipText("");
        getContentPane().add(vaccineCurrent);
        vaccineCurrent.setBounds(860, 90, 60, 18);

        vaccineSlider.setBackground(new java.awt.Color(255, 255, 255));
        vaccineSlider.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        vaccineSlider.setForeground(new java.awt.Color(255, 255, 255));
        vaccineSlider.setPaintLabels(true);
        vaccineSlider.setToolTipText("");
        vaccineSlider.setValue(0);
        vaccineSlider.setMaximumSize(new java.awt.Dimension(32767, 30));
        vaccineSlider.setMinimumSize(new java.awt.Dimension(36, 30));
        vaccineSlider.setName(""); // NOI18N
        vaccineSlider.setRequestFocusEnabled(false);
        vaccineSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                vaccineSliderStateChanged(evt);
            }
        });
        getContentPane().add(vaccineSlider);
        vaccineSlider.setBounds(770, 60, 200, 20);

        quarantineCurrent.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        quarantineCurrent.setForeground(new java.awt.Color(255, 255, 255));
        quarantineCurrent.setLabelFor(quarantineSlider);
        quarantineCurrent.setText("0");
        quarantineCurrent.setToolTipText("");
        getContentPane().add(quarantineCurrent);
        quarantineCurrent.setBounds(860, 190, 50, 24);

        quarantineLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        quarantineLabel.setForeground(new java.awt.Color(255, 255, 255));
        quarantineLabel.setLabelFor(quarantineSlider);
        quarantineLabel.setText("Percent of population that quarantine when sick");
        getContentPane().add(quarantineLabel);
        quarantineLabel.setBounds(640, 130, 430, 18);

        quarantineSlider.setBackground(new java.awt.Color(255, 255, 255));
        quarantineSlider.setForeground(new java.awt.Color(255, 255, 255));
        quarantineSlider.setPaintLabels(true);
        quarantineSlider.setToolTipText("");
        quarantineSlider.setValue(0);
        quarantineSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quarantineSliderStateChanged(evt);
            }
        });
        getContentPane().add(quarantineSlider);
        quarantineSlider.setBounds(770, 160, 200, 20);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        instructions.setEditable(false);
        instructions.setBackground(getBackground());
        instructions.setColumns(20);
        instructions.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        instructions.setForeground(new java.awt.Color(255, 255, 255));
        instructions.setRows(5);
        instructions.setText("Welcome to our interactive epidemiology tool!\n\nTo get started please select a disease you wish to simulate.\nAfter that please selection the parameters and safeguards you\nwould like to simulate for that disease.\n\nWhen you are happy with your selection please hit Start.\n\nIf you would like to learn more about a component please hit Learn More.");
        instructions.setBorder(null);
        instructions.setMinimumSize(new java.awt.Dimension(500, 200));
        instructions.setPreferredSize(new java.awt.Dimension(500, 200));
        jScrollPane1.setViewportView(instructions);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 10, 600, 220);

        aboutModelButton.setBackground(getBackground());
        aboutModelButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        aboutModelButton.setForeground(new java.awt.Color(255, 255, 255));
        aboutModelButton.setText("Learn More");
        aboutModelButton.setMaximumSize(new java.awt.Dimension(200, 200));
        aboutModelButton.setMinimumSize(new java.awt.Dimension(100, 27));
        aboutModelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutModelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(aboutModelButton);
        aboutModelButton.setBounds(240, 250, 110, 30);

        aboutModelButton1.setBackground(getBackground());
        aboutModelButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        aboutModelButton1.setForeground(new java.awt.Color(255, 255, 255));
        aboutModelButton1.setText("Learn More");
        aboutModelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutModelButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(aboutModelButton1);
        aboutModelButton1.setBounds(790, 250, 110, 30);

        buttonGroup2.add(bubonicButton);
        bubonicButton.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        bubonicButton.setForeground(new java.awt.Color(255, 255, 255));
        bubonicButton.setText("Black Death");
        bubonicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bubonicButtonActionPerformed(evt);
            }
        });
        getContentPane().add(bubonicButton);
        bubonicButton.setBounds(140, 490, 140, 23);

        deleteHistory.setBackground(getBackground());
        deleteHistory.setForeground(new java.awt.Color(255, 255, 255));
        deleteHistory.setText("Delete Reports");
        deleteHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteHistoryActionPerformed(evt);
            }
        });
        getContentPane().add(deleteHistory);
        deleteHistory.setBounds(870, 710, 140, 30);

        userHistoryButton.setBackground(getBackground());
        userHistoryButton.setForeground(new java.awt.Color(255, 255, 255));
        userHistoryButton.setText("User History");
        userHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userHistoryButtonActionPerformed(evt);
            }
        });
        getContentPane().add(userHistoryButton);
        userHistoryButton.setBounds(700, 710, 140, 30);

        buttonGroup2.add(spanishFluButton);
        spanishFluButton.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        spanishFluButton.setForeground(new java.awt.Color(255, 255, 255));
        spanishFluButton.setText("Spanish Flu");
        spanishFluButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spanishFluButtonActionPerformed(evt);
            }
        });
        getContentPane().add(spanishFluButton);
        spanishFluButton.setBounds(340, 490, 140, 29);

        buttonGroup2.add(deltaButton);
        deltaButton.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        deltaButton.setForeground(new java.awt.Color(255, 255, 255));
        deltaButton.setText("Delta");
        deltaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deltaButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deltaButton);
        deltaButton.setBounds(140, 560, 140, 29);

        buttonGroup2.add(smallpoxButton);
        smallpoxButton.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        smallpoxButton.setForeground(new java.awt.Color(255, 255, 255));
        smallpoxButton.setText("Smallpox");
        smallpoxButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smallpoxButtonActionPerformed(evt);
            }
        });
        getContentPane().add(smallpoxButton);
        smallpoxButton.setBounds(340, 560, 120, 29);

        mutationCheckBox.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        mutationCheckBox.setForeground(new java.awt.Color(255, 255, 255));
        mutationCheckBox.setText("Mutation");
        getContentPane().add(mutationCheckBox);
        mutationCheckBox.setBounds(800, 360, 120, 28);

        checkboxBG.setBackground(getBackground());
        checkboxBG.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(checkboxBG);
        checkboxBG.setBounds(770, 350, 160, 50);

        diseaseBG.setBackground(getBackground());
        diseaseBG.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        diseaseBG.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(diseaseBG);
        diseaseBG.setBounds(110, 410, 380, 200);

        safeguardBG.setBackground(getBackground());
        safeguardBG.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        safeguardBG.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(safeguardBG);
        safeguardBG.setBounds(630, 20, 430, 200);

        parameterBG.setBackground(getBackground());
        parameterBG.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        parameterBG.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(parameterBG);
        parameterBG.setBounds(670, 460, 350, 210);

        jLabelOverlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Overlay.png"))); // NOI18N
        jLabelOverlay.setText("f");
        jLabelOverlay.setToolTipText("");
        jLabelOverlay.setMaximumSize(new java.awt.Dimension(1100, 800));
        jLabelOverlay.setMinimumSize(new java.awt.Dimension(1100, 800));
        jLabelOverlay.setPreferredSize(new java.awt.Dimension(1100, 800));
        getContentPane().add(jLabelOverlay);
        jLabelOverlay.setBounds(0, 0, 1100, 800);

        jLabelDefaultBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainBG.png"))); // NOI18N
        jLabelDefaultBG.setText("f");
        jLabelDefaultBG.setToolTipText("");
        jLabelDefaultBG.setMaximumSize(new java.awt.Dimension(800, 800));
        jLabelDefaultBG.setMinimumSize(new java.awt.Dimension(800, 800));
        jLabelDefaultBG.setPreferredSize(new java.awt.Dimension(200, 200));
        getContentPane().add(jLabelDefaultBG);
        jLabelDefaultBG.setBounds(0, 0, 1610, 790);

        jLabelSmallPox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/smallpox.PNG"))); // NOI18N
        jLabelSmallPox.setText("jLabel1");
        jLabelSmallPox.setToolTipText("");
        jLabelSmallPox.setMaximumSize(new java.awt.Dimension(800, 800));
        jLabelSmallPox.setMinimumSize(new java.awt.Dimension(800, 800));
        jLabelSmallPox.setPreferredSize(new java.awt.Dimension(200, 200));
        getContentPane().add(jLabelSmallPox);
        jLabelSmallPox.setBounds(0, 0, 1610, 790);

        jLabelDelta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delta.jpg"))); // NOI18N
        jLabelDelta.setText("jLabel1");
        jLabelDelta.setToolTipText("");
        jLabelDelta.setMaximumSize(new java.awt.Dimension(800, 800));
        jLabelDelta.setMinimumSize(new java.awt.Dimension(800, 800));
        jLabelDelta.setPreferredSize(new java.awt.Dimension(200, 200));
        getContentPane().add(jLabelDelta);
        jLabelDelta.setBounds(0, 0, 1610, 790);

        jLabelSpanishFlu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spanishflu.PNG"))); // NOI18N
        jLabelSpanishFlu.setText("jLabel1");
        jLabelSpanishFlu.setToolTipText("");
        jLabelSpanishFlu.setMaximumSize(new java.awt.Dimension(800, 800));
        jLabelSpanishFlu.setMinimumSize(new java.awt.Dimension(800, 800));
        jLabelSpanishFlu.setPreferredSize(new java.awt.Dimension(200, 200));
        getContentPane().add(jLabelSpanishFlu);
        jLabelSpanishFlu.setBounds(0, 0, 1610, 790);

        jLabelBlackDeath.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BlackDeathVirus.PNG"))); // NOI18N
        jLabelBlackDeath.setText("jLabel1");
        jLabelBlackDeath.setToolTipText("");
        jLabelBlackDeath.setMaximumSize(new java.awt.Dimension(800, 800));
        jLabelBlackDeath.setMinimumSize(new java.awt.Dimension(800, 800));
        jLabelBlackDeath.setPreferredSize(new java.awt.Dimension(200, 200));
        getContentPane().add(jLabelBlackDeath);
        jLabelBlackDeath.setBounds(0, 0, 1610, 790);

        jLabelCovid.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Covid.PNG"))); // NOI18N
        jLabelCovid.setText("f");
        jLabelCovid.setToolTipText("");
        jLabelCovid.setMaximumSize(new java.awt.Dimension(1200, 800));
        jLabelCovid.setMinimumSize(new java.awt.Dimension(1200, 800));
        jLabelCovid.setPreferredSize(new java.awt.Dimension(200, 200));
        getContentPane().add(jLabelCovid);
        jLabelCovid.setBounds(0, 0, 1610, 790);

        jLabelInfluenza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Flu.PNG"))); // NOI18N
        jLabelInfluenza.setText("jLabel1");
        jLabelInfluenza.setToolTipText("");
        jLabelInfluenza.setMaximumSize(new java.awt.Dimension(800, 800));
        jLabelInfluenza.setMinimumSize(new java.awt.Dimension(800, 800));
        jLabelInfluenza.setPreferredSize(new java.awt.Dimension(200, 200));
        getContentPane().add(jLabelInfluenza);
        jLabelInfluenza.setBounds(0, 0, 1610, 790);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * startButtonActionPerformed is the event handler for the start button. It takes
    * the information from the main page and creates the results page.
    * @param evt 
    */  
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        PopulationModel epidemic = new PopulationModel();
        
        epidemic.setPop(popSlider.getValue());
        epidemic.setInfected(infectedSlider.getValue());
        epidemic.setTimeframe(timeSlider.getValue());
        
        if(covidButton.isSelected()){             
            epidemic.setDisease(1, vaccineSlider.getValue(), quarantineSlider.getValue());
            epidemic.getSimulatedPop(mutationCheckBox.isSelected());
        }
        else if(fluButton.isSelected()){  
            epidemic.setDisease(2, vaccineSlider.getValue(), quarantineSlider.getValue());
            epidemic.getSimulatedPop(mutationCheckBox.isSelected());
        }
        else if(bubonicButton.isSelected()){  
            epidemic.setDisease(3, vaccineSlider.getValue(), quarantineSlider.getValue());
            epidemic.getSimulatedPop(mutationCheckBox.isSelected());
        }
        else if(spanishFluButton.isSelected()){   
            epidemic.setDisease(4, vaccineSlider.getValue(), quarantineSlider.getValue());
            epidemic.getSimulatedPop(mutationCheckBox.isSelected());
        }
        else if(deltaButton.isSelected()){   
            epidemic.setDisease(5, vaccineSlider.getValue(), quarantineSlider.getValue());
            epidemic.getSimulatedPop(mutationCheckBox.isSelected());
        }
        else if(smallpoxButton.isSelected()){  
            epidemic.setDisease(6, vaccineSlider.getValue(), quarantineSlider.getValue());
            epidemic.getSimulatedPop(mutationCheckBox.isSelected());
        }
        
        popObservable.setModel(epidemic);
        ResultsPage results = new ResultsPage(this, true, 
                 timeSlider.getValue());
        results.setLocationRelativeTo(this);
        results.setVisible(true);
    }//GEN-LAST:event_startButtonActionPerformed

    private void popSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_popSliderStateChanged
        popCurrent.setText(""+popSlider.getValue());
    }//GEN-LAST:event_popSliderStateChanged

    private void infectedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_infectedSliderStateChanged
        infectedCurrent.setText(""+infectedSlider.getValue());
    }//GEN-LAST:event_infectedSliderStateChanged

    private void timeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_timeSliderStateChanged
        timeCurrent.setText(""+timeSlider.getValue());
    }//GEN-LAST:event_timeSliderStateChanged

    /**
    * covidButtonActionPerformed is event handler for the covid button. It allows
    * for the background in main page to change accordingly as well as the corresponding
    * informative text on results page.
    * @param evt 
    */
    private void covidButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_covidButtonActionPerformed
        selectedDisease="Covid";
        vaccineSlider.setEnabled(true);
        quarantineSlider.setEnabled(true);
        TurnOffBackgrounds();
        jLabelCovid.setVisible(true);
        startButton.setEnabled(true);
    }//GEN-LAST:event_covidButtonActionPerformed

    /**
    * fluButtonActionPerformed is event handler for the influenza button. It allows
    * for the background in main page to change accordingly as well as the corresponding
    * informative text on results page.
    * @param evt 
    */
    private void fluButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fluButtonActionPerformed
        selectedDisease="Influenza";
        vaccineSlider.setEnabled(true);
        quarantineSlider.setEnabled(true);
        TurnOffBackgrounds();
        jLabelInfluenza.setVisible(true);
        startButton.setEnabled(true);
    }//GEN-LAST:event_fluButtonActionPerformed

    private void vaccineSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_vaccineSliderStateChanged
        vaccineCurrent.setText(""+vaccineSlider.getValue());
    }//GEN-LAST:event_vaccineSliderStateChanged

    private void quarantineSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quarantineSliderStateChanged
        quarantineCurrent.setText(""+quarantineSlider.getValue());
    }//GEN-LAST:event_quarantineSliderStateChanged

    /**
    * reads from a file to display text about the epidemiology tool when clicked.
    * @param evt 
    */
    private void aboutModelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutModelButtonActionPerformed
        String fileToRead = "Instructions.txt";
        ReadMorePage infodump = new ReadMorePage(new MainPage(), true, fileToRead);
        infodump.setLocationRelativeTo(this);
        infodump.setVisible(true);
    }//GEN-LAST:event_aboutModelButtonActionPerformed

    /**
    * reads from a file to display text about safeguards when clicked.
    * @param evt 
    */
    private void aboutModelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutModelButton1ActionPerformed
        String fileToRead = "Safeguards.txt";
        ReadMorePage infodump = new ReadMorePage(new MainPage(), true, fileToRead);
        infodump.setLocationRelativeTo(this);
        infodump.setVisible(true);
    }//GEN-LAST:event_aboutModelButton1ActionPerformed

    /**
    * bubonicButtonActionPerformed is event handler for the black death button. It allows
    * for the background in main page to change accordingly as well as the corresponding
    * informative text on results page.
    * @param evt 
    */
    private void bubonicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bubonicButtonActionPerformed
        selectedDisease="Black Death";
        vaccineSlider.setEnabled(false);
        quarantineSlider.setEnabled(false);
        TurnOffBackgrounds();
        jLabelBlackDeath.setVisible(true);
        startButton.setEnabled(true);
        
    }//GEN-LAST:event_bubonicButtonActionPerformed

    /**
    * Displays user history from file that has been added to the txt file from 
    * the results page. 
    * @param evt 
    */
    private void userHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userHistoryButtonActionPerformed
        String fileToRead = "UserReport.txt";
        ReadMorePage infodump = new ReadMorePage(new MainPage(), true, fileToRead);
        infodump.setLocationRelativeTo(this);
        infodump.setVisible(true);
    }//GEN-LAST:event_userHistoryButtonActionPerformed

    /**
    * spanishFluButtonActionPerformed is event handler for the spanish flu button. It allows
    * for the background in main page to change accordingly as well as the corresponding
    * informative text on results page.
    * @param evt 
    */
    private void spanishFluButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spanishFluButtonActionPerformed
        selectedDisease="Spanish Flu";
        vaccineSlider.setEnabled(false);
        quarantineSlider.setEnabled(false);
        TurnOffBackgrounds();
        jLabelSpanishFlu.setVisible(true);
        startButton.setEnabled(true);
    }//GEN-LAST:event_spanishFluButtonActionPerformed

    /**
    * smallpoxButtonActionPerformed is event handler for the smallpox button. It allows
    * for the background in main page to change accordingly as well as the corresponding
    * informative text on results page.
    * @param evt 
    */
    private void smallpoxButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smallpoxButtonActionPerformed
        selectedDisease="Small Pox";
        vaccineSlider.setEnabled(true);
        quarantineSlider.setEnabled(false);
        TurnOffBackgrounds();
        jLabelSmallPox.setVisible(true);
        startButton.setEnabled(true);
    }//GEN-LAST:event_smallpoxButtonActionPerformed

    /**
    * deltaButtonActionPerformed is event handler for the delta button. It allows
    * for the background in main page to change accordingly as well as the corresponding
    * informative text on results page.
    * @param evt 
    */
    private void deltaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deltaButtonActionPerformed
        selectedDisease="Delta";
        vaccineSlider.setEnabled(true);
        quarantineSlider.setEnabled(true);
        TurnOffBackgrounds();
        jLabelDelta.setVisible(true);
        startButton.setEnabled(true);
    }//GEN-LAST:event_deltaButtonActionPerformed

    /**
    * Option to delete user data
    * @param evt 
    */
    private void deleteHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteHistoryActionPerformed
        try {
            FileWriter writer;
            writer = new FileWriter("UserReport.txt", false);
            writer.write(".");
        } catch (IOException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteHistoryActionPerformed

    /** Main file for program
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        FlatLaf.setGlobalExtraDefaults( Collections.singletonMap( "@accentColor", "#16361c" ) );
        FlatDarkLaf.setup();
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("FlatDarkLaf".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutModelButton;
    private javax.swing.JButton aboutModelButton1;
    private javax.swing.JRadioButton bubonicButton;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel checkboxBG;
    private javax.swing.JRadioButton covidButton;
    private javax.swing.JButton deleteHistory;
    private javax.swing.JRadioButton deltaButton;
    private javax.swing.JPanel diseaseBG;
    private javax.swing.JRadioButton fluButton;
    private javax.swing.JLabel infectLabel;
    private javax.swing.JLabel infectedCurrent;
    private javax.swing.JSlider infectedSlider;
    private javax.swing.JTextArea instructions;
    private javax.swing.JLabel jLabelBlackDeath;
    private javax.swing.JLabel jLabelCovid;
    private javax.swing.JLabel jLabelDefaultBG;
    private javax.swing.JLabel jLabelDelta;
    private javax.swing.JLabel jLabelInfluenza;
    private javax.swing.JLabel jLabelOverlay;
    private javax.swing.JLabel jLabelSmallPox;
    private javax.swing.JLabel jLabelSpanishFlu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox mutationCheckBox;
    private javax.swing.JPanel parameterBG;
    private javax.swing.JLabel popCurrent;
    private javax.swing.JLabel popLabel;
    private javax.swing.JSlider popSlider;
    private javax.swing.JLabel quarantineCurrent;
    private javax.swing.JLabel quarantineLabel;
    private javax.swing.JSlider quarantineSlider;
    private javax.swing.JPanel safeguardBG;
    private javax.swing.JRadioButton smallpoxButton;
    private javax.swing.JRadioButton spanishFluButton;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel timeCurrent;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JSlider timeSlider;
    private javax.swing.JButton userHistoryButton;
    private javax.swing.JLabel vaccineCurrent;
    private javax.swing.JLabel vaccineLabel;
    private javax.swing.JSlider vaccineSlider;
    // End of variables declaration//GEN-END:variables
}
